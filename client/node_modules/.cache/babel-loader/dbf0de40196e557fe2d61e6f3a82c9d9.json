{"ast":null,"code":"var _jsxFileName = \"/Users/wingu/Documents/job-related/refridge/client/src/components/Home.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport api from '../apiCalls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [jhaList, setJhaList] = useState([]);\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset'\n    }\n  }\n});\n\nfunction Row(props) {\n  _s();\n\n  const {\n    row\n  } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"expand row\",\n          size: \"small\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(KeyboardArrowUpIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: row.job\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.selectedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        style: {\n          paddingBottom: 0,\n          paddingTop: 0\n        },\n        colSpan: 6,\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: open,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            margin: 1,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              component: \"div\",\n              children: \"History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              \"aria-label\": \"purchases\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Customer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Total price ($)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: row.history.map(historyRow => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    children: historyRow.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: historyRow.customerId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: historyRow.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: Math.round(historyRow.amount * row.price * 100) / 100\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 25\n                  }, this)]\n                }, historyRow.date, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Row, \"RF9p2CoDwMBXAZRTkFYWAJRAu48=\", false, function () {\n  return [useRowStyles];\n});\n\n_c = Row;\nRow.propTypes = {\n  row: PropTypes.shape({\n    job: PropTypes.string.isRequired,\n    selectedDate: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    extraInfo: PropTypes.arrayOf(PropTypes.shape({\n      supervisor: PropTypes.string.isRequired,\n      analyst: PropTypes.string.isRequired,\n      organization: PropTypes.string.isRequired,\n      location: PropTypes.string.isRequired,\n      department: PropTypes.string.isRequired,\n      review: PropTypes.string.isRequired,\n      ppe: PropTypes.string.isRequired,\n      training: PropTypes.string.isRequired\n    })).isRequired,\n    supervisor: PropTypes.string.isRequired,\n    analyst: PropTypes.string.isRequired,\n    organization: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    department: PropTypes.string.isRequired,\n    review: PropTypes.string.isRequired,\n    ppe: PropTypes.string.isRequired,\n    training: PropTypes.string.isRequired // history: PropTypes.arrayOf(\n    //   PropTypes.shape({\n    //     amount: PropTypes.number.isRequired,\n    //     customerId: PropTypes.string.isRequired,\n    //     date: PropTypes.string.isRequired,\n    //   }),\n    // ).isRequired,\n\n  }).isRequired\n};\n\nfunction Home() {\n  _s2();\n\n  const [doneFetch, setDoneFetch] = useState(false);\n  useEffect(async () => {\n    setJhaList(await api.getJha());\n    setDoneFetch(true);\n\n    if (doneFetch) {\n      console.log('Completed Fetch');\n    } // \n\n  }, []); // const AllJHA = JHAList.map(JHA =>\n  //     <li key = {JHA.ID}>{JHA.job}</li> )\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"collapsible table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Dessert (100g serving)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Date Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"New/Revised\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Title of Person doing Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: jhaList.map(row => /*#__PURE__*/_jsxDEV(Row, {\n          row: row\n        }, row.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(Home, \"5E8vBHMFbAJBGkGZfXfUVbRHk/o=\");\n\n_c2 = Home;\nexport default Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/wingu/Documents/job-related/refridge/client/src/components/Home.js"],"names":["React","useState","useEffect","PropTypes","makeStyles","Box","Collapse","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Paper","KeyboardArrowDownIcon","KeyboardArrowUpIcon","api","jhaList","setJhaList","useRowStyles","root","borderBottom","Row","props","row","open","setOpen","classes","job","selectedDate","status","title","paddingBottom","paddingTop","history","map","historyRow","date","customerId","amount","Math","round","price","propTypes","shape","string","isRequired","extraInfo","arrayOf","supervisor","analyst","organization","location","department","review","ppe","training","Home","doneFetch","setDoneFetch","getJha","console","log","name"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AAGA,OAAOC,GAAP,MAAgB,aAAhB;;AAGA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,EAAD,CAAtC;AAEA,MAAMoB,YAAY,GAAGjB,UAAU,CAAC;AAC5BkB,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPC,MAAAA,YAAY,EAAE;AADP;AADL;AADsB,CAAD,CAA/B;;AASA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAAUD,KAAhB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkB5B,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM4B,OAAO,GAAGR,YAAY,EAA5B;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEQ,OAAO,CAACP,IAA7B;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,UAAD;AAAY,wBAAW,YAAvB;AAAoC,UAAA,IAAI,EAAC,OAAzC;AAAiD,UAAA,OAAO,EAAE,MAAMM,OAAO,CAAC,CAACD,IAAF,CAAvE;AAAA,oBACGA,IAAI,gBAAG,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAA6B,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AADpC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,IAArB;AAA0B,QAAA,KAAK,EAAC,KAAhC;AAAA,kBACGD,GAAG,CAACI;AADP;AAAA;AAAA;AAAA;AAAA,cANF,eASE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA,kBAA0BJ,GAAG,CAACK;AAA9B;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA,kBAA0BL,GAAG,CAACM;AAA9B;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA,kBAA0BN,GAAG,CAACO;AAA9B;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE,QAAC,QAAD;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE,CAAjB;AAAoBC,UAAAA,UAAU,EAAE;AAAhC,SAAlB;AAAuD,QAAA,OAAO,EAAE,CAAhE;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAER,IAAd;AAAoB,UAAA,OAAO,EAAC,MAA5B;AAAmC,UAAA,aAAa,MAAhD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,MAAM,EAAE,CAAb;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAyB,cAAA,YAAY,MAArC;AAAsC,cAAA,SAAS,EAAC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,OAAZ;AAAoB,4BAAW,WAA/B;AAAA,sCACE,QAAC,SAAD;AAAA,uCACE,QAAC,QAAD;AAAA,0CACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE,QAAC,SAAD;AAAW,oBAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,eAIE,QAAC,SAAD;AAAW,oBAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eASE,QAAC,SAAD;AAAA,0BACGD,GAAG,CAACU,OAAJ,CAAYC,GAAZ,CAAiBC,UAAD,iBACf,QAAC,QAAD;AAAA,0CACE,QAAC,SAAD;AAAW,oBAAA,SAAS,EAAC,IAArB;AAA0B,oBAAA,KAAK,EAAC,KAAhC;AAAA,8BACGA,UAAU,CAACC;AADd;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,SAAD;AAAA,8BAAYD,UAAU,CAACE;AAAvB;AAAA;AAAA;AAAA;AAAA,0BAJF,eAKE,QAAC,SAAD;AAAW,oBAAA,KAAK,EAAC,OAAjB;AAAA,8BAA0BF,UAAU,CAACG;AAArC;AAAA;AAAA;AAAA;AAAA,0BALF,eAME,QAAC,SAAD;AAAW,oBAAA,KAAK,EAAC,OAAjB;AAAA,8BACGC,IAAI,CAACC,KAAL,CAAWL,UAAU,CAACG,MAAX,GAAoBf,GAAG,CAACkB,KAAxB,GAAgC,GAA3C,IAAkD;AADrD;AAAA;AAAA;AAAA;AAAA,0BANF;AAAA,mBAAeN,UAAU,CAACC,IAA1B;AAAA;AAAA;AAAA;AAAA,wBADD;AADH;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD;;GAzDMf,G;UAGWH,Y;;;KAHXG,G;AA4DTA,GAAG,CAACqB,SAAJ,GAAgB;AACdnB,EAAAA,GAAG,EAAEvB,SAAS,CAAC2C,KAAV,CAAgB;AACnBhB,IAAAA,GAAG,EAAE3B,SAAS,CAAC4C,MAAV,CAAiBC,UADH;AAEnBjB,IAAAA,YAAY,EAAE5B,SAAS,CAAC4C,MAAV,CAAiBC,UAFZ;AAGnBhB,IAAAA,MAAM,EAAE7B,SAAS,CAAC4C,MAAV,CAAiBC,UAHN;AAInBf,IAAAA,KAAK,EAAE9B,SAAS,CAAC4C,MAAV,CAAiBC,UAJL;AAKnBC,IAAAA,SAAS,EAAE9C,SAAS,CAAC+C,OAAV,CACT/C,SAAS,CAAC2C,KAAV,CAAgB;AACdK,MAAAA,UAAU,EAAEhD,SAAS,CAAC4C,MAAV,CAAiBC,UADf;AAEdI,MAAAA,OAAO,EAAEjD,SAAS,CAAC4C,MAAV,CAAiBC,UAFZ;AAGdK,MAAAA,YAAY,EAAElD,SAAS,CAAC4C,MAAV,CAAiBC,UAHjB;AAIdM,MAAAA,QAAQ,EAAEnD,SAAS,CAAC4C,MAAV,CAAiBC,UAJb;AAKdO,MAAAA,UAAU,EAAEpD,SAAS,CAAC4C,MAAV,CAAiBC,UALf;AAMdQ,MAAAA,MAAM,EAAErD,SAAS,CAAC4C,MAAV,CAAiBC,UANX;AAOdS,MAAAA,GAAG,EAAEtD,SAAS,CAAC4C,MAAV,CAAiBC,UAPR;AAQdU,MAAAA,QAAQ,EAAEvD,SAAS,CAAC4C,MAAV,CAAiBC;AARb,KAAhB,CADS,EAWTA,UAhBiB;AAiBnBG,IAAAA,UAAU,EAAEhD,SAAS,CAAC4C,MAAV,CAAiBC,UAjBV;AAkBnBI,IAAAA,OAAO,EAAEjD,SAAS,CAAC4C,MAAV,CAAiBC,UAlBP;AAmBnBK,IAAAA,YAAY,EAAElD,SAAS,CAAC4C,MAAV,CAAiBC,UAnBZ;AAoBnBM,IAAAA,QAAQ,EAAEnD,SAAS,CAAC4C,MAAV,CAAiBC,UApBR;AAqBnBO,IAAAA,UAAU,EAAEpD,SAAS,CAAC4C,MAAV,CAAiBC,UArBV;AAsBnBQ,IAAAA,MAAM,EAAErD,SAAS,CAAC4C,MAAV,CAAiBC,UAtBN;AAuBnBS,IAAAA,GAAG,EAAEtD,SAAS,CAAC4C,MAAV,CAAiBC,UAvBH;AAwBnBU,IAAAA,QAAQ,EAAEvD,SAAS,CAAC4C,MAAV,CAAiBC,UAxBR,CA0BnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAhCmB,GAAhB,EAiCFA;AAlCW,CAAhB;;AAsCA,SAASW,IAAT,GAAgB;AAAA;;AAEZ,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B5D,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,YAAY;AAClBkB,IAAAA,UAAU,CAAC,MAAMF,GAAG,CAAC4C,MAAJ,EAAP,CAAV;AACAD,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAID,SAAJ,EAAc;AACVG,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,KALiB,CAMlB;;AACC,GAPI,EAOF,EAPE,CAAT,CAJY,CAaZ;AACA;;AAEA,sBACE,QAAC,cAAD;AAAgB,IAAA,SAAS,EAAEjD,KAA3B;AAAA,2BACE,QAAC,KAAD;AAAO,oBAAW,mBAAlB;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,SAAD;AAAA,kBACGI,OAAO,CAACkB,GAAR,CAAaX,GAAD,iBACX,QAAC,GAAD;AAAoB,UAAA,GAAG,EAAEA;AAAzB,WAAUA,GAAG,CAACuC,IAAd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBH;;IArCQN,I;;MAAAA,I;AAsCT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\n\nimport api from '../apiCalls';\n\n\nconst [jhaList, setJhaList] = useState([])\n\nconst useRowStyles = makeStyles({\n    root: {\n      '& > *': {\n        borderBottom: 'unset',\n      },\n    },\n  });\n\n\nfunction Row(props) {\n    const { row } = props;\n    const [open, setOpen] = React.useState(false);\n    const classes = useRowStyles();\n  \n    return (\n      <React.Fragment>\n        <TableRow className={classes.root}>\n          <TableCell>\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </IconButton>\n          </TableCell>\n          <TableCell component=\"th\" scope=\"row\">\n            {row.job}\n          </TableCell>\n          <TableCell align=\"right\">{row.selectedDate}</TableCell>\n          <TableCell align=\"right\">{row.status}</TableCell>\n          <TableCell align=\"right\">{row.title}</TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n              <Box margin={1}>\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                  History\n                </Typography>\n                <Table size=\"small\" aria-label=\"purchases\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Date</TableCell>\n                      <TableCell>Customer</TableCell>\n                      <TableCell align=\"right\">Amount</TableCell>\n                      <TableCell align=\"right\">Total price ($)</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {row.history.map((historyRow) => (\n                      <TableRow key={historyRow.date}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {historyRow.date}\n                        </TableCell>\n                        <TableCell>{historyRow.customerId}</TableCell>\n                        <TableCell align=\"right\">{historyRow.amount}</TableCell>\n                        <TableCell align=\"right\">\n                          {Math.round(historyRow.amount * row.price * 100) / 100}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </Box>\n            </Collapse>\n          </TableCell>\n        </TableRow>\n      </React.Fragment>\n    );\n  }\n\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    job: PropTypes.string.isRequired,\n    selectedDate: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    extraInfo: PropTypes.arrayOf(\n      PropTypes.shape({\n        supervisor: PropTypes.string.isRequired,\n        analyst: PropTypes.string.isRequired,\n        organization: PropTypes.string.isRequired,\n        location: PropTypes.string.isRequired,\n        department: PropTypes.string.isRequired,\n        review: PropTypes.string.isRequired,\n        ppe: PropTypes.string.isRequired,\n        training: PropTypes.string.isRequired\n      }),\n    ).isRequired,\n    supervisor: PropTypes.string.isRequired,\n    analyst: PropTypes.string.isRequired,\n    organization: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    department: PropTypes.string.isRequired,\n    review: PropTypes.string.isRequired,\n    ppe: PropTypes.string.isRequired,\n    training: PropTypes.string.isRequired\n\n    // history: PropTypes.arrayOf(\n    //   PropTypes.shape({\n    //     amount: PropTypes.number.isRequired,\n    //     customerId: PropTypes.string.isRequired,\n    //     date: PropTypes.string.isRequired,\n    //   }),\n    // ).isRequired,\n  }).isRequired,\n};\n\n\nfunction Home() {\n    \n    const [doneFetch, setDoneFetch] = useState(false)\n\n    useEffect(async () => {\n        setJhaList(await api.getJha());\n        setDoneFetch(true);\n        if (doneFetch){\n            console.log('Completed Fetch');\n        }\n        // \n        }, []);\n\n    // const AllJHA = JHAList.map(JHA =>\n    //     <li key = {JHA.ID}>{JHA.job}</li> )\n\n    return (\n      <TableContainer component={Paper}>\n        <Table aria-label=\"collapsible table\">\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TableCell>Dessert (100g serving)</TableCell>\n              <TableCell align=\"right\">Job Title</TableCell>\n              <TableCell align=\"right\">Date Created</TableCell>\n              <TableCell align=\"right\">New/Revised</TableCell>\n              <TableCell align=\"right\">Title of Person doing Job</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {jhaList.map((row) => (\n              <Row key={row.name} row={row} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    )\n}\nexport default Home;"]},"metadata":{},"sourceType":"module"}
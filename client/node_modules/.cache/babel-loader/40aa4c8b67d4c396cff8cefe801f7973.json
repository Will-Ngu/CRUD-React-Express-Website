{"ast":null,"code":"var _jsxFileName = \"/Users/wingu/Documents/job-related/refridge/client/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import { makeStyles } from '@material-ui/core/styles';\n// import Box from '@material-ui/core/Box';\n// import Collapse from '@material-ui/core/Collapse';\n// import IconButton from '@material-ui/core/IconButton';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import Typography from '@material-ui/core/Typography';\n// import Paper from '@material-ui/core/Paper';\n// import KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n// import KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nimport api from '../apiCalls'; // const useRowStyles = makeStyles({\n//     root: {\n//       '& > *': {\n//         borderBottom: 'unset',\n//       },\n//     },\n//   });\n// function Row(props) {\n//     const { row } = props;\n//     const [open, setOpen] = React.useState(false);\n//     const classes = useRowStyles();\n//     return (\n//       <React.Fragment>\n//         <TableRow className={classes.root}>\n//           <TableCell>\n//             <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n//               {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n//             </IconButton>\n//           </TableCell>\n//           <TableCell component=\"th\" scope=\"row\">\n//             {row.name}\n//           </TableCell>\n//           <TableCell align=\"right\">{row.calories}</TableCell>\n//           <TableCell align=\"right\">{row.fat}</TableCell>\n//           <TableCell align=\"right\">{row.carbs}</TableCell>\n//           <TableCell align=\"right\">{row.protein}</TableCell>\n//         </TableRow>\n//         <TableRow>\n//           <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n//             <Collapse in={open} timeout=\"auto\" unmountOnExit>\n//               <Box margin={1}>\n//                 <Typography variant=\"h6\" gutterBottom component=\"div\">\n//                   History\n//                 </Typography>\n//                 <Table size=\"small\" aria-label=\"purchases\">\n//                   <TableHead>\n//                     <TableRow>\n//                       <TableCell>Date</TableCell>\n//                       <TableCell>Customer</TableCell>\n//                       <TableCell align=\"right\">Amount</TableCell>\n//                       <TableCell align=\"right\">Total price ($)</TableCell>\n//                     </TableRow>\n//                   </TableHead>\n//                   <TableBody>\n//                     {row.history.map((historyRow) => (\n//                       <TableRow key={historyRow.date}>\n//                         <TableCell component=\"th\" scope=\"row\">\n//                           {historyRow.date}\n//                         </TableCell>\n//                         <TableCell>{historyRow.customerId}</TableCell>\n//                         <TableCell align=\"right\">{historyRow.amount}</TableCell>\n//                         <TableCell align=\"right\">\n//                           {Math.round(historyRow.amount * row.price * 100) / 100}\n//                         </TableCell>\n//                       </TableRow>\n//                     ))}\n//                   </TableBody>\n//                 </Table>\n//               </Box>\n//             </Collapse>\n//           </TableCell>\n//         </TableRow>\n//       </React.Fragment>\n//     );\n//   }\n// function CollapsibleTable() {\n//     return (\n//       <TableContainer component={Paper}>\n//         <Table aria-label=\"collapsible table\">\n//           <TableHead>\n//             <TableRow>\n//               <TableCell />\n//               <TableCell>Dessert (100g serving)</TableCell>\n//               <TableCell align=\"right\">Calories</TableCell>\n//               <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n//               <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n//               <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {rows.map((row) => (\n//               <Row key={row.name} row={row} />\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     );\n//   }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [JHAList, setJhaList] = useState([]);\n  const [doneFetch, setDoneFetch] = useState(false);\n  useEffect(async () => {\n    setJhaList(await api.getJha());\n    setDoneFetch(true);\n\n    if (doneFetch) {\n      console.log('Completed Fetch');\n    } // \n\n  }, []);\n  const AllJHA = JHAList.map(JHA => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: JHA.job\n  }, JHA.ID, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: AllJHA\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"a8fvDAlbFF9LSZiszeAtTFqnjek=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/wingu/Documents/job-related/refridge/client/src/components/Home.js"],"names":["React","useState","useEffect","api","Home","JHAList","setJhaList","doneFetch","setDoneFetch","getJha","console","log","AllJHA","map","JHA","job","ID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOC,GAAP,MAAgB,aAAhB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,YAAY;AAClBI,IAAAA,UAAU,CAAC,MAAMH,GAAG,CAACM,MAAJ,EAAP,CAAV;AACAD,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAID,SAAJ,EAAc;AACVG,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,KALiB,CAMlB;;AACC,GAPI,EAOF,EAPE,CAAT;AASA,QAAMC,MAAM,GAAGP,OAAO,CAACQ,GAAR,CAAYC,GAAG,iBAC1B;AAAA,cAAoBA,GAAG,CAACC;AAAxB,KAAWD,GAAG,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA,UADW,CAAf;AAGA,sBACI;AAAA,cACKJ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GArBQR,I;;KAAAA,I;AAsBT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// import { makeStyles } from '@material-ui/core/styles';\n// import Box from '@material-ui/core/Box';\n// import Collapse from '@material-ui/core/Collapse';\n// import IconButton from '@material-ui/core/IconButton';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n// import Typography from '@material-ui/core/Typography';\n// import Paper from '@material-ui/core/Paper';\n// import KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n// import KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\n\nimport api from '../apiCalls';\n\n// const useRowStyles = makeStyles({\n//     root: {\n//       '& > *': {\n//         borderBottom: 'unset',\n//       },\n//     },\n//   });\n\n\n// function Row(props) {\n//     const { row } = props;\n//     const [open, setOpen] = React.useState(false);\n//     const classes = useRowStyles();\n  \n//     return (\n//       <React.Fragment>\n//         <TableRow className={classes.root}>\n//           <TableCell>\n//             <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n//               {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n//             </IconButton>\n//           </TableCell>\n//           <TableCell component=\"th\" scope=\"row\">\n//             {row.name}\n//           </TableCell>\n//           <TableCell align=\"right\">{row.calories}</TableCell>\n//           <TableCell align=\"right\">{row.fat}</TableCell>\n//           <TableCell align=\"right\">{row.carbs}</TableCell>\n//           <TableCell align=\"right\">{row.protein}</TableCell>\n//         </TableRow>\n//         <TableRow>\n//           <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n//             <Collapse in={open} timeout=\"auto\" unmountOnExit>\n//               <Box margin={1}>\n//                 <Typography variant=\"h6\" gutterBottom component=\"div\">\n//                   History\n//                 </Typography>\n//                 <Table size=\"small\" aria-label=\"purchases\">\n//                   <TableHead>\n//                     <TableRow>\n//                       <TableCell>Date</TableCell>\n//                       <TableCell>Customer</TableCell>\n//                       <TableCell align=\"right\">Amount</TableCell>\n//                       <TableCell align=\"right\">Total price ($)</TableCell>\n//                     </TableRow>\n//                   </TableHead>\n//                   <TableBody>\n//                     {row.history.map((historyRow) => (\n//                       <TableRow key={historyRow.date}>\n//                         <TableCell component=\"th\" scope=\"row\">\n//                           {historyRow.date}\n//                         </TableCell>\n//                         <TableCell>{historyRow.customerId}</TableCell>\n//                         <TableCell align=\"right\">{historyRow.amount}</TableCell>\n//                         <TableCell align=\"right\">\n//                           {Math.round(historyRow.amount * row.price * 100) / 100}\n//                         </TableCell>\n//                       </TableRow>\n//                     ))}\n//                   </TableBody>\n//                 </Table>\n//               </Box>\n//             </Collapse>\n//           </TableCell>\n//         </TableRow>\n//       </React.Fragment>\n//     );\n//   }\n\n// function CollapsibleTable() {\n//     return (\n//       <TableContainer component={Paper}>\n//         <Table aria-label=\"collapsible table\">\n//           <TableHead>\n//             <TableRow>\n//               <TableCell />\n//               <TableCell>Dessert (100g serving)</TableCell>\n//               <TableCell align=\"right\">Calories</TableCell>\n//               <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n//               <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n//               <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {rows.map((row) => (\n//               <Row key={row.name} row={row} />\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     );\n//   }\n\nfunction Home() {\n    const [JHAList, setJhaList] = useState([])\n    const [doneFetch, setDoneFetch] = useState(false)\n\n    useEffect(async () => {\n        setJhaList(await api.getJha());\n        setDoneFetch(true);\n        if (doneFetch){\n            console.log('Completed Fetch');\n        }\n        // \n        }, []);\n\n    const AllJHA = JHAList.map(JHA =>\n        <li key = {JHA.ID}>{JHA.job}</li> )\n\n    return (\n        <div>\n            {AllJHA}\n        </div>  \n    )\n}\nexport default Home;"]},"metadata":{},"sourceType":"module"}